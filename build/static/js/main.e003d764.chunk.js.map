{"version":3,"sources":["model.js","components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["learnTodos","require","exerciseTodos","trainTasks","concat","MODEL_NAME","encodeData","encoder","tasks","a","sentences","map","t","text","toLowerCase","embed","embeddings","trainModel","container","tf","loadedModel","console","log","xTrain","yTrain","icon","model","add","dense","inputShape","shape","activation","units","compile","loss","optimizer","adam","metrics","fit","batchSize","validationSplit","shuffle","epochs","callbacks","tfvis","fitCallbacks","save","suggestIcon","taskName","threshold","trim","xPredict","prediction","predict","dataSync","TodoForm","onSubmit","useState","name","input","setInput","suggestedIcon","setSuggestedIcon","typeTimeout","setTypeTimeout","inputRef","useRef","useEffect","current","focus","handleSubmit","e","preventDefault","id","Math","floor","random","className","placeholder","value","onChange","target","clearTimeout","setTimeout","predictedIcon","ref","onClick","Todo","todos","completeTodo","removeTodo","todo","index","isComplete","TodoList","visRef","setTodos","setModel","setEncoder","React","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","use","sentenceEncoder","trainedModel","loadModel","length","newTodos","updatedTodos","removedArr","filter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e003d764.chunk.js","sourcesContent":["import * as tf from '@tensorflow/tfjs'\r\nimport * as tfvis from '@tensorflow/tfjs-vis'\r\nconst learnTodos = require('./data/learn_todos.json')\r\nconst exerciseTodos = require('./data/exercise_todos.json')\r\n\r\nconst trainTasks = learnTodos.concat(exerciseTodos)\r\n\r\n// const MODEL_NAME = 'suggestion-model'\r\nconst MODEL_NAME = 'testing-model'\r\nconst N_CLASSES = 2\r\n\r\nconst encodeData = async (encoder, tasks) => {\r\n  const sentences = tasks.map((t) => t.text.toLowerCase())\r\n  const embeddings = await encoder.embed(sentences)\r\n  return embeddings\r\n}\r\n\r\nconst trainModel = async (encoder, container) => {\r\n  try {\r\n    const loadedModel = await tf.loadLayersModel(`localstorage://${MODEL_NAME}`)\r\n    console.log('Using existing model')\r\n    return loadedModel\r\n  } catch (e) {\r\n    console.log('Training new model')\r\n  }\r\n\r\n  const xTrain = await encodeData(encoder, trainTasks) // text embeddings\r\n\r\n  const yTrain = tf.tensor2d(\r\n    trainTasks.map((t) => [t.icon === 'BOOK' ? 1 : 0, t.icon === 'RUN' ? 1 : 0])\r\n  )\r\n\r\n  const model = tf.sequential()\r\n\r\n  // hidden layers\r\n  model.add(\r\n    tf.layers.dense({\r\n      inputShape: [xTrain.shape[1]],\r\n      activation: 'sigmoid',\r\n      units: 32\r\n    })\r\n  )\r\n\r\n  model.add(\r\n    tf.layers.dense({\r\n      inputShape: [32],\r\n      activation: 'sigmoid',\r\n      units: 8\r\n    })\r\n  )\r\n\r\n  model.add(\r\n    tf.layers.dense({\r\n      inputShape: [8],\r\n      activation: 'sigmoid',\r\n      units: 4\r\n    })\r\n  )\r\n\r\n  // output layer\r\n  model.add(\r\n    tf.layers.dense({\r\n      inputShape: [4],\r\n      activation: 'softmax',\r\n      units: N_CLASSES\r\n    })\r\n  )\r\n\r\n  model.compile({\r\n    loss: 'categoricalCrossentropy',\r\n    optimizer: tf.train.adam(0.001),\r\n    metrics: ['accuracy']\r\n  })\r\n\r\n  await model.fit(xTrain, yTrain, {\r\n    batchSize: 32,\r\n    validationSplit: 0.1,\r\n    shuffle: true,\r\n    epochs: 150,\r\n    callbacks: tfvis.show.fitCallbacks(\r\n      container,\r\n      ['loss', 'val_loss', 'acc', 'val_acc'],\r\n      {\r\n        callbacks: ['onEpochEnd']\r\n      }\r\n    )\r\n  })\r\n\r\n  await model.save(`localstorage://${MODEL_NAME}`)\r\n  return model\r\n}\r\n\r\nconst suggestIcon = async (model, encoder, taskName, threshold) => {\r\n  if (taskName.trim() === '') {\r\n    return null\r\n  }\r\n  const xPredict = await encodeData(encoder, [{ text: taskName }])\r\n  const prediction = model.predict(xPredict).dataSync()\r\n\r\n  console.log(prediction)\r\n\r\n  if (prediction[0] > threshold) {\r\n    return 'BOOK'\r\n  } else if (prediction[1] > threshold) {\r\n    return 'RUN'\r\n  } else {\r\n    return 'TODO'\r\n  }\r\n}\r\n\r\nexport { suggestIcon, trainModel }\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { suggestIcon } from '../model'\r\n\r\nimport { RiTodoLine } from 'react-icons/ri'\r\nimport { IoFitness } from 'react-icons/io5'\r\nimport { MdLocalDrink } from 'react-icons/md'\r\nimport { BiBookBookmark } from 'react-icons/bi'\r\n\r\nconst CONFIDENCE_THRESHOLD = 0.7\r\n\r\nconst TodoForm = ({ onSubmit, model, encoder }) => {\r\n  const [input, setInput] = useState({\r\n    name: '',\r\n    icon: 'TODO'\r\n  })\r\n  const [suggestedIcon, setSuggestedIcon] = useState('TODO')\r\n  const [typeTimeout, setTypeTimeout] = useState(null)\r\n\r\n  const inputRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus()\r\n  })\r\n\r\n  const handleChange = (e) => {\r\n    const taskName = e.target.value\r\n    setInput(() => ({ ...input, name: taskName }))\r\n    if (typeTimeout) {\r\n      clearTimeout(typeTimeout)\r\n    }\r\n    setTypeTimeout(\r\n      setTimeout(async () => {\r\n        const predictedIcon = await suggestIcon(\r\n          model,\r\n          encoder,\r\n          taskName,\r\n          CONFIDENCE_THRESHOLD\r\n        )\r\n        setSuggestedIcon(() => predictedIcon)\r\n      }, 500)\r\n    )\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    onSubmit({\r\n      id: Math.floor(Math.random() * 10000),\r\n      text: input.name,\r\n      icon: suggestedIcon\r\n    })\r\n    setInput(() => ({ name: '', icon: 'TODO' }))\r\n    setSuggestedIcon(() => 'TODO')\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className='todo-form'>\r\n      <input\r\n        placeholder='Add a todo'\r\n        value={input.name}\r\n        onChange={handleChange}\r\n        name='text'\r\n        className='todo-input'\r\n        ref={inputRef}\r\n      />\r\n      <button onClick={handleSubmit} className='todo-button'>\r\n        {suggestedIcon === 'TODO' && <RiTodoLine className='todo-input-icon' />}\r\n        {suggestedIcon === '' && <RiTodoLine className='todo-input-icon' />}\r\n        {suggestedIcon === null && <RiTodoLine className='todo-input-icon' />}\r\n        {suggestedIcon === 'RUN' && <IoFitness className='todo-input-icon' />}\r\n        {suggestedIcon === 'DRINK' && (\r\n          <MdLocalDrink className='todo-input-icon' />\r\n        )}\r\n        {suggestedIcon === 'BOOK' && (\r\n          <BiBookBookmark className='todo-input-icon' />\r\n        )}\r\n        Add Todo\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default TodoForm\r\n","import React from 'react'\r\nimport { RiCloseCircleLine } from 'react-icons/ri'\r\nimport { RiTodoLine } from 'react-icons/ri'\r\nimport { IoFitness } from 'react-icons/io5'\r\nimport { MdLocalDrink } from 'react-icons/md'\r\nimport { BiBookBookmark } from 'react-icons/bi'\r\n\r\nconst Todo = ({ todos, completeTodo, removeTodo }) => {\r\n  return todos.map((todo, index) => (\r\n    <div\r\n      className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\r\n      key={index}\r\n    >\r\n      <div\r\n        className='todo-row-content'\r\n        key={todo.id}\r\n        onClick={() => completeTodo(todo.id)}\r\n      >\r\n        {todo.icon === 'TODO' && <RiTodoLine className='todo-icon' />}\r\n        {todo.icon === 'RUN' && <IoFitness className='todo-icon' />}\r\n        {todo.icon === 'DRINK' && <MdLocalDrink className='todo-icon' />}\r\n        {todo.icon === 'BOOK' && <BiBookBookmark className='todo-icon' />}\r\n        {todo.text}\r\n      </div>\r\n      <div className='icons'>\r\n        <RiCloseCircleLine\r\n          onClick={() => removeTodo(todo.id)}\r\n          className='delete-icon'\r\n        />\r\n      </div>\r\n    </div>\r\n  ))\r\n}\r\n\r\nexport default Todo\r\n","import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport Todo from './Todo'\r\n\r\nimport * as use from '@tensorflow-models/universal-sentence-encoder'\r\nimport { trainModel } from '../model'\r\n\r\nfunction TodoList({ visRef }) {\r\n  const [todos, setTodos] = useState([])\r\n  const [model, setModel] = useState(null)\r\n  const [encoder, setEncoder] = useState(null)\r\n\r\n  React.useEffect(() => {\r\n    const storedTodos = JSON.parse(localStorage.getItem('todos'))\r\n    if (storedTodos !== null) {\r\n      setTodos(storedTodos)\r\n    }\r\n  }, [])\r\n\r\n  React.useEffect(() => {\r\n    localStorage.setItem('todos', JSON.stringify(todos))\r\n  }, [todos])\r\n\r\n  const addTodo = (todo) => {\r\n    if (todo.text.trim() === '') {\r\n      return\r\n    }\r\n    if (todos === null || todos.length === 0) {\r\n      setTodos(() => [todo])\r\n    } else {\r\n      const newTodos = [...todos, todo]\r\n      setTodos(() => newTodos)\r\n    }\r\n  }\r\n\r\n  const removeTodo = (id) => {\r\n    const removedArr = [...todos].filter((todo) => todo.id !== id)\r\n    setTodos(removedArr)\r\n  }\r\n\r\n  const completeTodo = (id) => {\r\n    let updatedTodos = todos.map((todo) => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete\r\n      }\r\n      return todo\r\n    })\r\n    setTodos(updatedTodos)\r\n  }\r\n\r\n  // ML\r\n  React.useEffect(() => {\r\n    const loadModel = async () => {\r\n      const sentenceEncoder = await use.load()\r\n      const trainedModel = await trainModel(sentenceEncoder, visRef.current)\r\n      setEncoder(sentenceEncoder)\r\n      setModel(trainedModel)\r\n    }\r\n    loadModel()\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      {model === null && <h1>Loading Model ... </h1>}\r\n      {model !== null && (\r\n        <>\r\n          <h1>What's the Plan for Today?</h1>\r\n          <TodoForm onSubmit={addTodo} model={model} encoder={encoder} />\r\n          {todos !== null && (\r\n            <Todo\r\n              todos={todos}\r\n              completeTodo={completeTodo}\r\n              removeTodo={removeTodo}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TodoList\r\n","import React from 'react'\r\nimport './App.css'\r\nimport TodoList from './components/TodoList'\r\n\r\nfunction App() {\r\n  const visRef = React.useRef(null)\r\n\r\n  return (\r\n    <>\r\n      <div ref={visRef} className='vis'></div>\r\n      <div className='todo-app'>\r\n        <TodoList visRef={visRef} />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}